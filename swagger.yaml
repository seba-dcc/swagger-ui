swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Digital Credentials"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "seba-dcc.github.io"
basePath: "/swagger-ui/"
tags:
  - name: "TUM Signing Server / Issuer API"
  - name: "Verifier API"
schemes:
  - "https"
paths:
  /create-credential:
    post:
      tags:
        - "TUM Signing Server / Issuer API"
      summary: "Create credential"
      description: ""
      operationId: "createCredential"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Request that shows the DID-domain that issues the credential. The credentialType defines what kind of credential is issued. The credentialSubject is the part that will be verified by the credential."
          required: true
          schema:
            $ref: "#/definitions/CredentialRequest"
      responses:
        200:
          description: "Successful operation - will return a set of credentials with the proof that was created."
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableCredential"
        500:
          description: "Internal server error"
  /offered-credentials:
    get:
      tags:
        - "TUM Signing Server / Issuer API"
      summary: "Credentials that TUM can issue for the student"
      description: ""
      operationId: "offeredCredentials"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation - shows all the credentialTypes that could be issued"
          schema:
            $ref: "#/definitions/CredentialsResponse"
        500:
          description: "Internal server error"
  /signed-credentials/{credentialId}:
    get:
      tags:
        - "TUM Signing Server / Issuer API"
      summary: "Get already created credential"
      description: ""
      operationId: "signedCredential"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "credentialId"
          type: "string"
          required: true
          description: "ID of the credential that is already created."
      responses:
        200:
          description: "Successful operation - returns the credential with the requested ID"
          schema:
            $ref: "#/definitions/VerifiableCredential"
        500:
          description: "Internal server error"
  /credentials-for-student/{matNum}:
    get:
      tags:
        - "TUM Signing Server / Issuer API"
      summary: "Get all signed credentials for student number"
      description: ""
      operationId: "credentialsForStudent"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "matNum"
          type: "string"
          required: true
          description: "Student number."
      responses:
        200:
          description: "Successful operation - returns all signed credentials"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VerifiableCredential"
        500:
          description: "Internal server error"
  /verify-credential:
    post:
      tags:
        - "Verifier API"
      summary: "Verify a VC"
      description: ""
      operationId: "verifyCredential"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: "formData"
          name: "vc"
          type: "file"
          description: "VC that needs to be verified"
          required: true
      responses:
        200:
          description: "Successful operation - will return true or false depending if the credential is verified"
          schema:
            type: "object"
            properties:
              verified:
                type: "boolean"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/verifyCredentialError"
definitions:
  VerifiableCredential:
    type: "object"
    properties:
      id:
        type: "string"
        example: "https://example.com/credentials/1872"
      context:
        type: "array"
        items:
          type: "string"
        example:
          - "https://www.w3.org/2018/credentials/v1"
          - "https://www.w3.org/2018/credentials/examples/v1"
      type:
        type: "array"
        items:
          type: "string"
        example:
          - "VerifiableCredential"
          - "DegreeCredential"
      issuer:
        type: "string"
        example: "did:tls:tum.de"
      issuanceDate:
        type: "string"
        example: "2010-01-01T19:23:24Z"
      credentialSubject:
        type: "object"
        example: {
          "alumniOf": "Technische Universität München",
          "grade": "1,0",
          "degreeType": "bachelor"
        }
      proof:
        type: "object"
        example:
          - type: Ed25519Signature2018
            created: '2020-12-15T11:07:10Z'
            jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kSp-z5 -cU3mxdJUJaDX_5xOHGF66nd2X9wdAisKMNH1OIlueXcKjO6TFDKrNHa3PIyRZMaTQ6TtZgIQ0mx7YAg
            proofPurpose: assertionMethod
            verificationMethod: 'did:tum'
    xml:
      name: "VerifiableCredential"
  verifyCredentialError:
    type: "object"
    properties:
      valid:
        type: "boolean"
        example: false
      error:
        type: "string"
        example: "Proof Missing in the Credential"
  DidResponse:
    type: "object"
    properties:
      id:
        type: "string"
      address:
        type: "string"
      didDocument:
        type: "object"
        properties:
          "@context":
            type: "string"
          id:
            type: "string"
          service:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                type:
                  type: "string"
                serviceEndpoint:
                  type: "string"
          assertionMethod:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                type:
                  type: "string"
                controller:
                  type: "string"
                publicKeyBase58:
                  type: "string"
    example:
      id: "did:tls:tum.de"
      address: "0x492140a461075F183556A6C9f718DF6e4df2f977"
      didDocument:
        "@context": "https://www.w3.org/ns/did/v1"
        id: "did:tls:tum.de"
        service:
          - id: "did:tls:tum.de#vcs"
            type: "VerifiableCredentialService"
            serviceEndpoint: "http://localhost:9004"
        assertionMethod:
          - id: "did:tls:tum.de#keys-1"
            controller: "did:tls:tum.de"
            publicKeyBase58: "E4tGev3GUgzsXZ6sJpSa259Y16gmW6zpNHESTtJGvVCb"
    xml:
      name: "DidResponse"
  CredentialRequest:
    type: "object"
    properties:
      domain:
        type: "string"
        example: "tum.de"
      matNum:
        type: "string"
        example: "123456"
      credentialType:
        type: "string"
        example: "degree"
      credentialSubject:
        type: "object"
        properties:
          givenName: 
            type: "string"
            example: "Michael"
          familyName:
            type: "string"
            example: "Meier"
          dateOfBirth:
            type: "string"
            example: "01.01.2000"
          alumniOf:
            type: "string"
            example: "TU München"
          degreeProgramme:
            type: "string"
            example: "Information Systems"
    xml:
      name: "CredentialRequest"
  CredentialsResponse:
    type: array
    items:
      type: "object"
      properties:
        _id:
          type: "string"
          example: "5ffadd9f553909d75cd3006f"
        type:
          type: "string"
          example: "degree"
        name: 
          type: "string"
          example: "Bachelor's Degree"
        requiredSubjectProperties: 
          type: "array"
          items:
            type: "string"
            example: "givenName"
        optionalSubjectProperties: 
          type: "array"
          items:
            type: "string"
            example: "grade"
        credentialBody:
          type: "array"
          items:
            $ref: "#/definitions/VerifiableCredential"
    xml:
      name: "CredentialsResponse"
  CredentialId:
    type: "object"
    properties:
      credential-id:
        type: "string"
    xml:
      name: "CredentialId"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
